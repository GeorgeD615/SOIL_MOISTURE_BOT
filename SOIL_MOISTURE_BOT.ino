#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h>

// WiFi –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const char* ssid = "wifi_name";
const char* password = "********";

// Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
#define BOT_TOKEN "***********************"
#define CHAT_ID "*******"

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∞—Ç—á–∏–∫–∞ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏
#define SOIL_MOISTURE_PIN A0  
#define DRY_THRESHOLD 800   // –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—à–µ - –ø–æ—á–≤–∞ —Å—É—Ö–∞—è
#define WET_THRESHOLD 150   // –ï—Å–ª–∏ –Ω–∏–∂–µ - –ø–æ—á–≤–∞ –ø–µ—Ä–µ—É–≤–ª–∞–∂–Ω–µ–Ω–∞
#define SENSOR_REMOVED 1024 // –ï—Å–ª–∏ –¥–∞—Ç—á–∏–∫ –≤—ã–Ω—É—Ç –∏–∑ –ø–æ—á–≤—ã

WiFiClientSecure client;

bool sensorRemovedNotified = false;  // –§–ª–∞–≥, —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ –≤—ã–Ω—É—Ç–æ–º –¥–∞—Ç—á–∏–∫–µ
int lastMoisture = -1;  // –ü—Ä–µ–¥—ã–¥—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—É—Ö–æ—Å—Ç–∏

void sendTelegramMessage(String message) {
    Serial.println("Sending Telegram message...");

    String url = "https://api.telegram.org/bot" + String(BOT_TOKEN) + "/sendMessage";
    String data = "chat_id=" + String(CHAT_ID) + "&text=" + message + "&parse_mode=Markdown";

    client.setInsecure();  // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É SSL
    if (!client.connect("api.telegram.org", 443)) {
        Serial.println("‚ö†Ô∏è Error: Failed to connect to Telegram!");
        return;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º HTTP-–∑–∞–ø—Ä–æ—Å
    client.println("POST " + url + " HTTP/1.1");
    client.println("Host: api.telegram.org");
    client.println("Content-Type: application/x-www-form-urlencoded");
    client.print("Content-Length: ");
    client.println(data.length());
    client.println();
    client.print(data);

    // –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç
    while (client.connected()) {
        String line = client.readStringUntil('\n');
        Serial.println(line);
        if (line == "\r") break;
    }
    
    client.stop();
    Serial.println("‚úÖ Telegram message sent!");
}

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);

    // –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WiFi (–º–∞–∫—Å–∏–º—É–º 1 –º–∏–Ω—É—Ç–∞)
    Serial.print("Connecting to WiFi...");
    int attempt = 0;
    while (WiFi.status() != WL_CONNECTED && attempt < 60) {
        delay(1000);
        Serial.print(".");
        attempt++;
    }

    if (WiFi.status() != WL_CONNECTED) {
        Serial.println("\n‚ö†Ô∏è Connection failed! Stopping program.");
        while (true);
    }

    Serial.println("\n‚úÖ Connected to WiFi!");
}

void loop() {
    int moistureValue = analogRead(SOIL_MOISTURE_PIN);
    int moisturePercent = moistureValue * 100 / 1023;

    Serial.print("Soil moisture level: ");
    Serial.print(moisturePercent);
    Serial.println("%");

    // –ï—Å–ª–∏ –¥–∞—Ç—á–∏–∫ –≤—ã–Ω—É—Ç
    if (moistureValue == SENSOR_REMOVED) {
        if (!sensorRemovedNotified) {
            sendTelegramMessage("‚ö†Ô∏è –î–∞—Ç—á–∏–∫ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –≤—ã–Ω—É—Ç –∏–∑ –ø–æ—á–≤—ã!");
            sensorRemovedNotified = true;
        }
        lastMoisture = moistureValue;
        delay(10000);
        return;
    } else {
      if(sensorRemovedNotified == true){
        sendTelegramMessage("‚úÖ –î–∞—Ç—á–∏–∫ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ —Å–Ω–æ–≤–∞ –≤ –ø–æ—á–≤–µ!");
      }  
      sensorRemovedNotified = false;
    }

    // –ï—Å–ª–∏ –ø–æ—á–≤–∞ —Å—É—Ö–∞—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (moistureValue > DRY_THRESHOLD) {
        sendTelegramMessage("‚ö†Ô∏è *–ü–æ—á–≤–∞ —Å–ª–∏—à–∫–æ–º —Å—É—Ö–∞—è!* üå±\n–£—Ä–æ–≤–µ–Ω—å —Å—É—Ö–æ—Å—Ç–∏: " + String(moisturePercent) + "%\n–ü–æ–ª–µ–π—Ç–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ! üö∞");
        Serial.println("Soil is too dry! Sending alert...");
        delay(10000);
        lastMoisture = moistureValue;
        return;
    }

    // –ï—Å–ª–∏ –≤–ª–∞–∂–Ω–æ—Å—Ç—å —Ä–µ–∑–∫–æ —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å –Ω–∞ 100 –∏ –¥–æ —ç—Ç–æ–≥–æ –±—ã–ª–∞ —Å—É—Ö–æ–π
    if (lastMoisture > 0 && (lastMoisture - moistureValue) >= 100 && lastMoisture != SENSOR_REMOVED) {
        sendTelegramMessage("üôè –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª–∏–ª–∏ –ø–æ—á–≤—É! –í–∞—à–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –ª—É—á—à–µ! üåø");
        Serial.println("Detected moisture increase! Sending thanks message...");
    }

    // –ï—Å–ª–∏ –ø–æ—á–≤–∞ —Å–ª–∏—à–∫–æ–º –≤–ª–∞–∂–Ω–∞—è
    if (moistureValue < WET_THRESHOLD) {
        sendTelegramMessage("‚ö†Ô∏è *–ü–æ—á–≤–∞ —Å–ª–∏—à–∫–æ–º –≤–ª–∞–∂–Ω–∞—è!* üí¶\n–£—Ä–æ–≤–µ–Ω—å —Å—É—Ö–æ—Å—Ç–∏: " + String(moisturePercent) + "%\n–í–æ–∑–º–æ–∂–Ω–æ, —Ä–∞—Å—Ç–µ–Ω–∏–µ –∑–∞–ª–∏–ª–∏ –≤–æ–¥–æ–π!");
        Serial.println("Soil is too wet! Sending alert...");
    }

    lastMoisture = moistureValue;
    delay(10000);
}